version: '3.5'

services:
    etcd:
        container_name: milvus-etcd
        image: quay.io/coreos/etcd:latest
        volumes:
            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
        command: etcd -listen-peer-urls=http://127.0.0.1:2380 -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls=http://127.0.0.1:2380 --listen-metrics-urls=http://127.0.0.1:2381 --initial-cluster default=http://127.0.0.1:2380 --data-dir /etcd
        healthcheck:
            test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:2381/health"]
            interval: 30s
            timeout: 20s
            retries: 3

    minio:
        container_name: milvus-minio
        image: minio/minio:RELEASE.2020-12-03T00-03-10Z
        environment:
            MINIO_ACCESS_KEY: minioadmin
            MINIO_SECRET_KEY: minioadmin
        volumes:
            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
        command: minio server /minio_data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    standalone:
        container_name: milvus-standalone
        image: milvusdb/milvus:v2.0.0-rc2-20210712-a8e5fd2
        command: ["milvus", "run", "standalone"]
        environment:
            ETCD_ENDPOINTS: etcd:2379
            MINIO_ADDRESS: minio:9000
        volumes:
            - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
        ports:
            - "19530:19530"
        depends_on:
            - etcd
            - minio
    milvus-ui:
        image: milvusdb/milvus-insight:latest
        ports: 
            - "8000:3000"
        depends_on: 
            - standalone
        volumes: 
            - ./:/source
        environment: 
            HOST_URL: http://127.0.0.1:8000 # https://docs.docker.com/docker-for-mac/#proxies
            MILVUS_URL: 127.0.0.1:19530
        container_name: "milvus-ui"
        
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ~/.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ~/.docker/rabbitmq/log/:/var/log/rabbitmq
        networks:
            - rabbitmq_go_net
    detect:
        image: cristiando0902/worker:1.0
        depends_on: 
            - rabbitmq
        # command: bash
        # start up order: https://docs.docker.com/compose/startup-order/
        command: ["/source/tools/wait_service.sh", "rabbitmq:5672", "--timeout=60", "--", "python3", "/source/start_detect.py"]
        volumes: 
            - ./:/source
            - ./models:/models
        container_name: "detect"
        tty: true
    extract:
        image: cristiando0902/worker:1.0
        depends_on: 
            - rabbitmq
        # command: bash
        command: ["/source/tools/wait_service.sh", "rabbitmq:5672", "--timeout=60", "--", "python3", "/source/start_extract.py"]
        volumes: 
            - ./:/source
            - ./models:/models
        container_name: "extract"
        tty: true
    search:
        image: cristiando0902/milvus_search:2.0
        # command: bash
        command: ["/source/tools/wait_service.sh", "rabbitmq:5672", "--timeout=60", "--", "python3", "/source/start_search.py"]
        volumes: 
            - ./:/source
        container_name: "search"
        depends_on: 
            - rabbitmq
            - standalone
        tty: true

networks:
    default:
        name: milvus
    rabbitmq_go_net:
        driver: bridge